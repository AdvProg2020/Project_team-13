Index: src/main/java/View/UserMenu/Seller/EditProductInfoMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/View/UserMenu/Seller/EditProductInfoMenu.java	(revision 5520781c7990385821962b02de9df4670c333164)
+++ src/main/java/View/UserMenu/Seller/EditProductInfoMenu.java	(date 1588447336838)
@@ -1,4 +1,30 @@
 package View.UserMenu.Seller;
 
-public class EditProductInfoMenu {
+import Controller.Client.ProductController;
+import View.Menu;
+
+public class EditProductInfoMenu extends Menu {
+    public EditProductInfoMenu(Menu parentMenu) {
+        super(parentMenu);
+    }
+
+    @Override
+    public void printError(String error) {
+        super.printError(error);
+    }
+
+    @Override
+    public void showMessage(String message) {
+        super.showMessage(message);
+    }
+
+    @Override
+    public void help() {
+
+    }
+
+    @Override
+    public void execute() {
+//        ProductController.getInstance().
+    }
 }
Index: src/main/java/View/UserMenu/Seller/SellerMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/View/UserMenu/Seller/SellerMenu.java	(revision 5520781c7990385821962b02de9df4670c333164)
+++ src/main/java/View/UserMenu/Seller/SellerMenu.java	(date 1588447320199)
@@ -3,7 +3,6 @@
 import Controller.Client.ClientController;
 import Controller.Client.ProductController;
 import Models.Product.Product;
-import Models.UserAccount.Seller;
 import View.Menu;
 
 import java.util.ArrayList;
@@ -18,89 +17,50 @@
     public void execute() {
         String command;
         System.out.println(ClientController.getInstance().getCurrentUser().viewPersonalInfo());
-//        if (!ClientController.getInstance().getSeller().isAccepted()) {
-//            System.out.println("Your registration application has not been approved by the administrator.");
-//            while (!(command = scanner.nextLine()).equalsIgnoreCase("back")) {
-//                if (command.equals("view personal info")) {
-//                    System.out.println("You don't have access!");
-//                } else if (command.equals("add product")) {
-//                    System.out.println("You don't have access!");
-//                } else if (command.equals("help")) {
-//                    System.out.println("you can just get back!!");
-//                } else {
-//                    System.out.println("Invalid command");
-//                }
-//            }
-//            back();
-//        }
-            while (!(command = scanner.nextLine()).equalsIgnoreCase("back")) {
-                if (command.equals("view personal info")) {
-                    System.out.println("Big Like");
-                } else if (command.equals("add product")) {
-                    addProduct();
-                } else if (command.equals("help")) {
-                    help();
-                } else {
-                    System.out.println("Invalid command");
-                }
-            }
-            back();
-
+        while (!(command = scanner.nextLine()).equalsIgnoreCase("back")) {
+            if (command.equals("view personal info")) {
+                System.out.println("Big Like");
+            } else if (command.equals("add product")) {
+                addProduct();
+            } else if (command.equals("help")) {
+                help();
+            } else {
+                System.out.println("Invalid command");
+            }
+        }
+        back();
     }
 
     private void addProduct() {
         ArrayList<String> fieldsOfProduct = new ArrayList<>();
-        fieldsOfProduct.add(getName("Company Name"));
-        fieldsOfProduct.add(getName("Product Name"));
-        System.out.println("Enter Products  description");
-        String s = "", description = "";
-        while (!(s = scanner.nextLine().trim()).equalsIgnoreCase("finish")) {
-            description += s;
-            description += "\\n";
+        System.out.println("Enter Company name");
+        fieldsOfProduct.add(scanner.nextLine().trim());
+        System.out.println("Enter Products Name");
+        fieldsOfProduct.add(scanner.nextLine().trim());
+        System.out.println("Enter Products  describtion");
+        String s = "", discribtion = "";
+        while ((s = scanner.nextLine().trim()).equalsIgnoreCase("finish")) {
+            discribtion += s;
+            discribtion += "\\n";
         }
-        fieldsOfProduct.add(description);
-        fieldsOfProduct.add(getNumber("Products Cost"));
-        fieldsOfProduct.add(getNumber("Available number of product"));
-        String category = getName("Products Category");
-        ArrayList<String> categoryFeatures = new ArrayList<>();
+        fieldsOfProduct.add(discribtion);
+        System.out.println("Enter Products Cost");
+        fieldsOfProduct.add(scanner.nextLine().trim());
+        System.out.println("Enter Available number of product");
+        fieldsOfProduct.add(scanner.nextLine().trim());
+        System.out.println("Enter Products Category");
+        String category=scanner.nextLine().trim();
+        ArrayList<String> categoryFeatures=new ArrayList<>();
         while ((s = scanner.nextLine().trim()).equalsIgnoreCase("finish")) {
-            if (Pattern.matches("\\w+/\\w+", s)) {
+            if(Pattern.matches("\\w+/.+",s)) {
                 categoryFeatures.add(s);
             } else {
                 System.out.println("Enter In Correct Form");
             }
         }
-        ProductController.getInstance().addProduct(fieldsOfProduct, categoryFeatures, category);
+        ProductController.getInstance().addProduct(fieldsOfProduct,categoryFeatures,category);
     }
 
-    private String getName(String nameKind) {
-        String name;
-        while (true) {
-            System.out.println("Enter " + nameKind);
-            name = scanner.nextLine().trim();
-            if (Pattern.matches("(\\w+ )*\\w+", name)) {
-                break;
-            } else {
-                System.out.println(nameKind + " is Invalid");
-            }
-        }
-        return name;
-    }
-
-    private String getNumber(String numberKind) {
-        String number;
-        while (true) {
-            System.out.println("Enter " + numberKind);
-            number = scanner.nextLine().trim();
-            if (Pattern.matches("\\d+", number)) {
-                break;
-            } else {
-                System.out.println(numberKind + "is Invalid");
-            }
-        }
-        return number;
-    }
-
     @Override
     public void help() {
         String sellerMenuOptions = "";
@@ -126,7 +86,6 @@
     @Override
     public void printError(String error) {
         System.out.println(error);
-
     }
 
 }
Index: src/main/java/Controller/Client/ClientController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/Controller/Client/ClientController.java	(revision 5520781c7990385821962b02de9df4670c333164)
+++ src/main/java/Controller/Client/ClientController.java	(date 1588447149000)
@@ -15,6 +15,7 @@
     private ClientController() {
     }
 
+
     public static ClientController getInstance() {
         if (clientController == null) {
             clientController = new ClientController();
Index: src/main/java/Controller/Client/ProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/Controller/Client/ProductController.java	(revision 5520781c7990385821962b02de9df4670c333164)
+++ src/main/java/Controller/Client/ProductController.java	(date 1588447148995)
@@ -29,5 +29,9 @@
         ClientController.getInstance().sendMessageToServer(MessageController.getInstance().makeMessage("AddProduct",product0));
     }
 
+    public void editProduct(String productId, String userName, String field, String newValue){
+
+    }
+
 
 }
Index: src/main/java/View/UserMenu/Seller/ManageProductMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/View/UserMenu/Seller/ManageProductMenu.java	(revision 5520781c7990385821962b02de9df4670c333164)
+++ src/main/java/View/UserMenu/Seller/ManageProductMenu.java	(date 1588447148975)
@@ -1,4 +1,57 @@
 package View.UserMenu.Seller;
 
-public class ManageProductMenu {
+import Controller.Client.ClientController;
+import Models.UserAccount.Seller;
+import View.Menu;
+
+public class ManageProductMenu extends Menu {
+    public ManageProductMenu(Menu parentMenu) {
+        super(parentMenu);
+    }
+    @Override
+    public void help() {
+        String ManageProductMenuOptions="";
+        ManageProductMenuOptions+="1.view [product Id]\n";
+        ManageProductMenuOptions+="2.view buyers [product Id]\n";
+        ManageProductMenuOptions+="3.edit [product Id]\n";
+        System.out.println(ManageProductMenuOptions);
+    }
+
+    @Override
+    public void execute() {
+        Seller seller=(Seller) ClientController.getInstance().getCurrentUser();
+        System.out.println(seller.viewAllProducts());
+        String command;
+        while(!(command=scanner.nextLine()).trim().equalsIgnoreCase("back")){
+           if(command.matches("view @p\\w+")){
+              System.out.println(seller.viewProduct(getTheProductIdByCommand(command,1)));
+           }else if(command.matches("view buyers @p\\w+")){
+               System.out.println();
+           }else if(command.matches("edit @p\\w+")){
+               Menu menu=new EditProductInfoMenu(this).setScanner(scanner);
+               ClientController.getInstance().setCurrentMenu(menu);
+               menu.execute();
+           }else if(command.equals("help")){
+               help();
+           }else{
+               System.out.println("invalid command");
+           }
+       }
+       back();
+    }
+
+    private String getTheProductIdByCommand(String command, int num){
+       String[] array=command.split("\\s");
+       return array[num];
+    }
+    @Override
+    public void showMessage(String message) {
+       super.showMessage(message);
+    }
+    @Override
+    public void printError(String error) {
+       super.printError(error);
+    }
+
+
 }
Index: src/main/java/View/UserMenu/Manager/ManageProductsMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/View/UserMenu/Manager/ManageProductsMenu.java	(revision 5520781c7990385821962b02de9df4670c333164)
+++ src/main/java/View/UserMenu/Manager/ManageProductsMenu.java	(date 1588447148973)
@@ -1,4 +1,5 @@
 package View.UserMenu.Manager;
 
 public class ManageProductsMenu {
+
 }
Index: src/main/java/Models/UserAccount/Seller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/Models/UserAccount/Seller.java	(revision 5520781c7990385821962b02de9df4670c333164)
+++ src/main/java/Models/UserAccount/Seller.java	(date 1588447365161)
@@ -96,31 +96,37 @@
     }
 
     public String viewAllProducts() {
+        if(getAllProducts()==null){
+            return "No Product Exits";
+        }
         String products = "";
         for (Product product : this.allProducts) {
-            products += product.getProductId() + "\\*\\";
-            products += product.getProductName() + "\\*\\";
-            products += product.getProductCost() + "\\*\\";
+            products += product.getProductId() + " ";
+            products += product.getProductName() + " ";
+            products += product.getProductCost() + " ";
             products += '\n';
         }
         return products;
     }
 
     public String viewProduct(String productID) {
+        if(getProductByID(productID)==null){
+            return "The Product Does Not Exist";
+        }
         String productInfo = "";
         Product product = getProductByID(productID);
-        productInfo += product.getProductId() + "\\*\\";
-        productInfo += product.getProductName() + "\\*\\";
-        productInfo += product.getProductCompany() + "\\*\\";
-        productInfo += product.getProductCost() + "\\*\\";
-        productInfo += product.getProductStatus() + "\\*\\";
-        productInfo += product.getProductsCategory() + "\\*\\";
-        productInfo += product.getNumberOfAvailableProducts() + "\\*\\";
-        productInfo += product.getDescription() + "\\*\\";
-        productInfo += product.getAverageScore() + "\\*\\";
-        productInfo += product.getCostAfterOff() + "\\*\\";
-        productInfo += product.getComments() + "\\*\\";
-        productInfo += product.getFeaturesOfCategoryThatHas() + "\\*\\";
+        productInfo += product.getProductId() + "\n";
+        productInfo += product.getProductName() + "\n";
+        productInfo += product.getProductCompany() + "\n";
+        productInfo += product.getProductCost() + "\n";
+        productInfo += product.getProductStatus() + "\n";
+        productInfo += product.getProductsCategory() + "\n";
+        productInfo += product.getNumberOfAvailableProducts() + "\n";
+        productInfo += product.getDescription() + "\n";
+        productInfo += product.getAverageScore() + "\n";
+        productInfo += product.getCostAfterOff() + "\n";
+        productInfo += product.getComments() + "\n";
+        productInfo += product.getFeaturesOfCategoryThatHas() + "\n";
         return productInfo;
 
     }
@@ -132,4 +138,6 @@
         }
         return null;
     }
+
+//    public String view
 }
